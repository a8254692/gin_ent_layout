// Code generated by ent, DO NOT EDIT.

package sysroles

import (
	"back-end/merchant/internal/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldID, id))
}

// GUID applies equality check predicate on the "guid" field. It's identical to GUIDEQ.
func GUID(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldGUID, v))
}

// MerchantID applies equality check predicate on the "merchant_id" field. It's identical to MerchantIDEQ.
func MerchantID(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldMerchantID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldName, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldCode, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldUpdateTime, v))
}

// GUIDEQ applies the EQ predicate on the "guid" field.
func GUIDEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldGUID, v))
}

// GUIDNEQ applies the NEQ predicate on the "guid" field.
func GUIDNEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldGUID, v))
}

// GUIDIn applies the In predicate on the "guid" field.
func GUIDIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldGUID, vs...))
}

// GUIDNotIn applies the NotIn predicate on the "guid" field.
func GUIDNotIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldGUID, vs...))
}

// GUIDGT applies the GT predicate on the "guid" field.
func GUIDGT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldGUID, v))
}

// GUIDGTE applies the GTE predicate on the "guid" field.
func GUIDGTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldGUID, v))
}

// GUIDLT applies the LT predicate on the "guid" field.
func GUIDLT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldGUID, v))
}

// GUIDLTE applies the LTE predicate on the "guid" field.
func GUIDLTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldGUID, v))
}

// GUIDContains applies the Contains predicate on the "guid" field.
func GUIDContains(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContains(FieldGUID, v))
}

// GUIDHasPrefix applies the HasPrefix predicate on the "guid" field.
func GUIDHasPrefix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasPrefix(FieldGUID, v))
}

// GUIDHasSuffix applies the HasSuffix predicate on the "guid" field.
func GUIDHasSuffix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasSuffix(FieldGUID, v))
}

// GUIDEqualFold applies the EqualFold predicate on the "guid" field.
func GUIDEqualFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEqualFold(FieldGUID, v))
}

// GUIDContainsFold applies the ContainsFold predicate on the "guid" field.
func GUIDContainsFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContainsFold(FieldGUID, v))
}

// MerchantIDEQ applies the EQ predicate on the "merchant_id" field.
func MerchantIDEQ(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldMerchantID, v))
}

// MerchantIDNEQ applies the NEQ predicate on the "merchant_id" field.
func MerchantIDNEQ(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldMerchantID, v))
}

// MerchantIDIn applies the In predicate on the "merchant_id" field.
func MerchantIDIn(vs ...int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldMerchantID, vs...))
}

// MerchantIDNotIn applies the NotIn predicate on the "merchant_id" field.
func MerchantIDNotIn(vs ...int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldMerchantID, vs...))
}

// MerchantIDGT applies the GT predicate on the "merchant_id" field.
func MerchantIDGT(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldMerchantID, v))
}

// MerchantIDGTE applies the GTE predicate on the "merchant_id" field.
func MerchantIDGTE(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldMerchantID, v))
}

// MerchantIDLT applies the LT predicate on the "merchant_id" field.
func MerchantIDLT(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldMerchantID, v))
}

// MerchantIDLTE applies the LTE predicate on the "merchant_id" field.
func MerchantIDLTE(v int64) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldMerchantID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContainsFold(FieldName, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldContainsFold(FieldCode, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v int32) predicate.SysRoles {
	return predicate.SysRoles(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SysRoles) predicate.SysRoles {
	return predicate.SysRoles(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SysRoles) predicate.SysRoles {
	return predicate.SysRoles(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SysRoles) predicate.SysRoles {
	return predicate.SysRoles(sql.NotPredicates(p))
}
