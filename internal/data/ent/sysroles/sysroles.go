// Code generated by ent, DO NOT EDIT.

package sysroles

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the sysroles type in the database.
	Label = "sys_roles"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGUID holds the string denoting the guid field in the database.
	FieldGUID = "guid"
	// FieldMerchantID holds the string denoting the merchant_id field in the database.
	FieldMerchantID = "merchant_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the sysroles in the database.
	Table = "sys_roles"
)

// Columns holds all SQL columns for sysroles fields.
var Columns = []string{
	FieldID,
	FieldGUID,
	FieldMerchantID,
	FieldName,
	FieldCode,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime int32
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime int32
)

// OrderOption defines the ordering options for the SysRoles queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByGUID orders the results by the guid field.
func ByGUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGUID, opts...).ToFunc()
}

// ByMerchantID orders the results by the merchant_id field.
func ByMerchantID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMerchantID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByCode orders the results by the code field.
func ByCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}
