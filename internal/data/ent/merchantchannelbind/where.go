// Code generated by ent, DO NOT EDIT.

package merchantchannelbind

import (
	"back-end/merchant/internal/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldID, id))
}

// MerchantID applies equality check predicate on the "merchant_id" field. It's identical to MerchantIDEQ.
func MerchantID(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldMerchantID, v))
}

// ChannelID applies equality check predicate on the "channel_id" field. It's identical to ChannelIDEQ.
func ChannelID(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldChannelID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldStatus, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldUpdateTime, v))
}

// MerchantIDEQ applies the EQ predicate on the "merchant_id" field.
func MerchantIDEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldMerchantID, v))
}

// MerchantIDNEQ applies the NEQ predicate on the "merchant_id" field.
func MerchantIDNEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldMerchantID, v))
}

// MerchantIDIn applies the In predicate on the "merchant_id" field.
func MerchantIDIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldMerchantID, vs...))
}

// MerchantIDNotIn applies the NotIn predicate on the "merchant_id" field.
func MerchantIDNotIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldMerchantID, vs...))
}

// MerchantIDGT applies the GT predicate on the "merchant_id" field.
func MerchantIDGT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldMerchantID, v))
}

// MerchantIDGTE applies the GTE predicate on the "merchant_id" field.
func MerchantIDGTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldMerchantID, v))
}

// MerchantIDLT applies the LT predicate on the "merchant_id" field.
func MerchantIDLT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldMerchantID, v))
}

// MerchantIDLTE applies the LTE predicate on the "merchant_id" field.
func MerchantIDLTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldMerchantID, v))
}

// ChannelIDEQ applies the EQ predicate on the "channel_id" field.
func ChannelIDEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldChannelID, v))
}

// ChannelIDNEQ applies the NEQ predicate on the "channel_id" field.
func ChannelIDNEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldChannelID, v))
}

// ChannelIDIn applies the In predicate on the "channel_id" field.
func ChannelIDIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldChannelID, vs...))
}

// ChannelIDNotIn applies the NotIn predicate on the "channel_id" field.
func ChannelIDNotIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldChannelID, vs...))
}

// ChannelIDGT applies the GT predicate on the "channel_id" field.
func ChannelIDGT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldChannelID, v))
}

// ChannelIDGTE applies the GTE predicate on the "channel_id" field.
func ChannelIDGTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldChannelID, v))
}

// ChannelIDLT applies the LT predicate on the "channel_id" field.
func ChannelIDLT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldChannelID, v))
}

// ChannelIDLTE applies the LTE predicate on the "channel_id" field.
func ChannelIDLTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldChannelID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int16) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v int32) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MerchantChannelBind) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MerchantChannelBind) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MerchantChannelBind) predicate.MerchantChannelBind {
	return predicate.MerchantChannelBind(sql.NotPredicates(p))
}
