// Code generated by ent, DO NOT EDIT.

package merchantlist

import (
	"back-end/merchant/internal/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldID, id))
}

// GUID applies equality check predicate on the "guid" field. It's identical to GUIDEQ.
func GUID(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldGUID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldName, v))
}

// Host applies equality check predicate on the "host" field. It's identical to HostEQ.
func Host(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldHost, v))
}

// ManageHost applies equality check predicate on the "manage_host" field. It's identical to ManageHostEQ.
func ManageHost(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldManageHost, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldStatus, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldUpdateTime, v))
}

// GUIDEQ applies the EQ predicate on the "guid" field.
func GUIDEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldGUID, v))
}

// GUIDNEQ applies the NEQ predicate on the "guid" field.
func GUIDNEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldGUID, v))
}

// GUIDIn applies the In predicate on the "guid" field.
func GUIDIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldGUID, vs...))
}

// GUIDNotIn applies the NotIn predicate on the "guid" field.
func GUIDNotIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldGUID, vs...))
}

// GUIDGT applies the GT predicate on the "guid" field.
func GUIDGT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldGUID, v))
}

// GUIDGTE applies the GTE predicate on the "guid" field.
func GUIDGTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldGUID, v))
}

// GUIDLT applies the LT predicate on the "guid" field.
func GUIDLT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldGUID, v))
}

// GUIDLTE applies the LTE predicate on the "guid" field.
func GUIDLTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldGUID, v))
}

// GUIDContains applies the Contains predicate on the "guid" field.
func GUIDContains(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContains(FieldGUID, v))
}

// GUIDHasPrefix applies the HasPrefix predicate on the "guid" field.
func GUIDHasPrefix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasPrefix(FieldGUID, v))
}

// GUIDHasSuffix applies the HasSuffix predicate on the "guid" field.
func GUIDHasSuffix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasSuffix(FieldGUID, v))
}

// GUIDEqualFold applies the EqualFold predicate on the "guid" field.
func GUIDEqualFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEqualFold(FieldGUID, v))
}

// GUIDContainsFold applies the ContainsFold predicate on the "guid" field.
func GUIDContainsFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContainsFold(FieldGUID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContainsFold(FieldName, v))
}

// HostEQ applies the EQ predicate on the "host" field.
func HostEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldHost, v))
}

// HostNEQ applies the NEQ predicate on the "host" field.
func HostNEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldHost, v))
}

// HostIn applies the In predicate on the "host" field.
func HostIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldHost, vs...))
}

// HostNotIn applies the NotIn predicate on the "host" field.
func HostNotIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldHost, vs...))
}

// HostGT applies the GT predicate on the "host" field.
func HostGT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldHost, v))
}

// HostGTE applies the GTE predicate on the "host" field.
func HostGTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldHost, v))
}

// HostLT applies the LT predicate on the "host" field.
func HostLT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldHost, v))
}

// HostLTE applies the LTE predicate on the "host" field.
func HostLTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldHost, v))
}

// HostContains applies the Contains predicate on the "host" field.
func HostContains(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContains(FieldHost, v))
}

// HostHasPrefix applies the HasPrefix predicate on the "host" field.
func HostHasPrefix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasPrefix(FieldHost, v))
}

// HostHasSuffix applies the HasSuffix predicate on the "host" field.
func HostHasSuffix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasSuffix(FieldHost, v))
}

// HostEqualFold applies the EqualFold predicate on the "host" field.
func HostEqualFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEqualFold(FieldHost, v))
}

// HostContainsFold applies the ContainsFold predicate on the "host" field.
func HostContainsFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContainsFold(FieldHost, v))
}

// ManageHostEQ applies the EQ predicate on the "manage_host" field.
func ManageHostEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldManageHost, v))
}

// ManageHostNEQ applies the NEQ predicate on the "manage_host" field.
func ManageHostNEQ(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldManageHost, v))
}

// ManageHostIn applies the In predicate on the "manage_host" field.
func ManageHostIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldManageHost, vs...))
}

// ManageHostNotIn applies the NotIn predicate on the "manage_host" field.
func ManageHostNotIn(vs ...string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldManageHost, vs...))
}

// ManageHostGT applies the GT predicate on the "manage_host" field.
func ManageHostGT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldManageHost, v))
}

// ManageHostGTE applies the GTE predicate on the "manage_host" field.
func ManageHostGTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldManageHost, v))
}

// ManageHostLT applies the LT predicate on the "manage_host" field.
func ManageHostLT(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldManageHost, v))
}

// ManageHostLTE applies the LTE predicate on the "manage_host" field.
func ManageHostLTE(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldManageHost, v))
}

// ManageHostContains applies the Contains predicate on the "manage_host" field.
func ManageHostContains(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContains(FieldManageHost, v))
}

// ManageHostHasPrefix applies the HasPrefix predicate on the "manage_host" field.
func ManageHostHasPrefix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasPrefix(FieldManageHost, v))
}

// ManageHostHasSuffix applies the HasSuffix predicate on the "manage_host" field.
func ManageHostHasSuffix(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldHasSuffix(FieldManageHost, v))
}

// ManageHostEqualFold applies the EqualFold predicate on the "manage_host" field.
func ManageHostEqualFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEqualFold(FieldManageHost, v))
}

// ManageHostContainsFold applies the ContainsFold predicate on the "manage_host" field.
func ManageHostContainsFold(v string) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldContainsFold(FieldManageHost, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int16) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldStatus, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v int32) predicate.MerchantList {
	return predicate.MerchantList(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MerchantList) predicate.MerchantList {
	return predicate.MerchantList(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MerchantList) predicate.MerchantList {
	return predicate.MerchantList(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MerchantList) predicate.MerchantList {
	return predicate.MerchantList(sql.NotPredicates(p))
}
